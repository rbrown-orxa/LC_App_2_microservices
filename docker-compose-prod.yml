version: '3'

# TODO: Lock versions of images

services:


  # frontend:
  #   build: frontend
  #   environment:
  #     - "CHOKIDAR_USEPOLLING=true" # hot reloading
  #   tty: true # prevent react exiting with code 0
  #   ports:
  #     - '80:3000'
  #   volumes:
  #     - "./frontend:/app" # hot reloading
  #     - '/app/node_modules' # don't overwrite node_modules with above line


  worker:
    build: api
    environment:
      - "PYTHONUNBUFFERED=1"
      - "BROKER_URL=amqp://rabbitmq:5672"
      - "CELERY_BACKEND=mongo"
      - "MINIO_CONN_STR=minio:9000"
      - "MINIO_USER=user"
      - "MINIO_PW=password"
      # - "MINIO_SECURE=False"
      - "MINIO_RAW_BUCKET=raw-uploads"
      - "MINIO_CLEANED_BUCKET=cleaned-uploads"
    command: celery -A tasks worker --loglevel=INFO
    volumes:
      - "./api:/app"    


  api:
    build: api
    ports:
      - '5000:5000'
    environment:
      - "PYTHONUNBUFFERED=1"
      - "BROKER_URL=amqp://rabbitmq:5672"
      - "CELERY_BACKEND=mongo"
      - "MINIO_CONN_STR=minio:9000"
      - "MINIO_USER=user"
      - "MINIO_PW=password"
      # - "MINIO_SECURE=False"
      - "MINIO_RAW_BUCKET=raw-uploads"
      - "MINIO_CLEANED_BUCKET=cleaned-uploads"
      - 'BILLING_DB_CONN_STR=host=postgres user=postgres dbname=postgres password=password sslmode=allow'
    volumes:
      - "./api:/app"


  minio:
    image: minio/minio
    volumes:
      - minio_vol:/data
    ports:
      - '9000:9000'
    environment:
      - 'MINIO_ROOT_USER=user'
      - 'MINIO_ROOT_PASSWORD=password'
    command: server /data


  postgres:
    image: postgres
    ports:
      - '5432:5432'
    environment:
      - 'POSTGRES_PASSWORD=password'
    volumes:
      - ./db/startup_scripts:/docker-entrypoint-initdb.d


  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'


  mongo:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo_vol:/data/db


    

volumes:
  minio_vol:
  mongo_vol: